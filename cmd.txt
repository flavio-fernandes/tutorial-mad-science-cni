
cd /vagrant
    
kind create cluster --config=kind-config.yaml

/vagrant/provision/config_kind.sh

helm repo add cilium https://helm.cilium.io/

helm search repo cilium --versions --devel
    
docker pull quay.io/cilium/cilium:v1.16.5
kind load docker-image quay.io/cilium/cilium:v1.16.5

cd ; helm pull cilium/cilium --version=v1.16.5 --untar

helm install cilium ./cilium/ \
--namespace kube-system \
--set image.pullPolicy=IfNotPresent \
--set ipam.mode=kubernetes \
--set cni.exclusive=false    
        
# helm install cilium cilium/cilium --version 1.16.5 \
# --namespace kube-system \
# --set image.pullPolicy=IfNotPresent \
# --set ipam.mode=kubernetes

## cilium status
## cilium hubble enable
cilium status --wait

## time cilium connectivity test

helm ls -A


IMG='quay.io/fedora/fedora:latest'
docker pull $IMG && kind load docker-image $IMG && echo ok

# create a simple pod and make sure it works with basic cilium
kubectl run -i --tty --rm fedora --image=quay.io/fedora/fedora:latest --restart=Never -- bash -il

dnf install -y iproute iputils nmap
ip a
ping -c 3 google.com
nc -v -z -w 2 google.com 80

# Multus
kubectl create -f https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/refs/heads/master/deployments/multus-daemonset-thick.yml
kubectl -n kube-system wait --for=condition=ready -l name=multus pod --timeout=300s

# Reference CNI plugins
kubectl create -f https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/refs/heads/master/e2e/templates/cni-install.yml.j2
kubectl -n kube-system wait --for=condition=ready -l name=cni-plugins pod --timeout=300s

# Whereabouts (aka where aboots in Canada :))
kubectl create -f https://raw.githubusercontent.com/k8snetworkplumbingwg/whereabouts/refs/heads/master/doc/crds/daemonset-install.yaml \
        -f https://raw.githubusercontent.com/k8snetworkplumbingwg/whereabouts/refs/heads/master/doc/crds/whereabouts.cni.cncf.io_overlappingrangeipreservations.yaml \
        -f https://raw.githubusercontent.com/k8snetworkplumbingwg/whereabouts/refs/heads/master/doc/crds/whereabouts.cni.cncf.io_ippools.yaml
kubectl -n kube-system wait --for=condition=ready -l name=whereabouts pod --timeout=300s

IMG='alpine'
docker pull $IMG && kind load docker-image $IMG && echo ok

# Start a test pod using NAD
/vagrant/provision/start_test_pods.sh && echo ok


            
    
